/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.dethware.xmpp.client;

import java.awt.Frame;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import javax.sound.sampled.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import org.jivesoftware.smack.ConnectionConfiguration;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;
/**
 *
 * @author peterix
 */
public class SettingsDialog extends javax.swing.JDialog {

    /**
     * Creates new form SettingsDialog
     */
    public SettingsDialog(Frame owner) {
        super(owner, true);
        // copy reference to app settings
        initComponents();
        RevertSettingsToSaved();
    }
    final void RevertSettingsToSaved()
    {
        AppSettings settings = AppSettings.globalInstance();
        // sound
        double volume = settings.getSoundVolume() * 100.0;
        sliderVolume.setValue((int)volume);
        inputMessageSound.setText(settings.getMessageSoundFile());
        inputLoginSound.setText(settings.getLoginSoundFile());
        inputLogoutSound.setText(settings.getLogoutSoundFile());

        // server info
        cmbPreset.setSelectedIndex(settings.getPreset().ordinal());
        inputAddress.setText(settings.getServerAddress());
        inputDomain.setText(settings.getServerDomain());
        inputPort.setText(Integer.toString(settings.getServerPort()));
        checkPLAIN.setSelected(settings.isUsePLAIN());
        checkSSL.setSelected(settings.isUseSSL());

        // user info
        inputLogin.setText(settings.getLogin());
        inputPassword.setText(settings.getPassword());
        inputResource.setText(settings.getResource());
    }

    public synchronized void testConnection() {
        new Thread(new Runnable() { // the wrapper thread is unnecessary, unless it blocks on the Clip finishing, see comments
            @Override
        public void run() {
        // server
        int port = 5222; // default port
        try
        {
            port = Integer.parseInt(inputPort.getText());
        }
        catch (NumberFormatException e)
        {
        }
        inputPort.setText(Integer.toString(port));

        //System.setProperty("smack.debugEnabled", "true");
        //XMPPConnection.DEBUG_ENABLED = true;
        ConnectionConfiguration config = new ConnectionConfiguration(inputAddress.getText(), port, inputDomain.getText());
        //config.setDebuggerEnabled(true);
        config.setSecurityMode(ConnectionConfiguration.SecurityMode.enabled);
        if(checkSSL.isSelected())
        {
            config.setSecurityMode(ConnectionConfiguration.SecurityMode.required);
            config.setSocketFactory(new DummySSLSocketFactory());
        }
        if(!checkPLAIN.isSelected())
            config.setSASLAuthenticationEnabled(true);

        //config.setCompressionEnabled(false);
        XMPPConnection connection = new XMPPConnection(config);
        try
        {
            // Connect to the server
            connection.connect();
            // Log into the server
            connection.login(inputLogin.getText(), new String(inputPassword.getPassword()), inputResource.getText());
        }
        catch(XMPPException e)
        {
            //default title and icon
            JOptionPane.showMessageDialog(null,"The connection failed:\n" + e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
            System.out.println("Couldn't connect!");
            System.out.println(e.getMessage());
            connection.disconnect();
            return;
        }
        // Disconnect from the server
        //connection.disconnect();
        JOptionPane.showMessageDialog(null,"The connection was successful!\n");
        System.out.println("Connection established!");
        connection.disconnect();
        }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        account_settings_panel = new javax.swing.JPanel();
        inputAddress = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputPort = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        inputDomain = new javax.swing.JTextField();
        checkSSL = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        cmbPreset = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        inputResource = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inputLogin = new javax.swing.JTextField();
        btnTestConnection = new javax.swing.JButton();
        inputPassword = new javax.swing.JPasswordField();
        checkPLAIN = new javax.swing.JCheckBox();
        application_settings_panel = new javax.swing.JPanel();
        sliderVolume = new javax.swing.JSlider();
        jLabel8 = new javax.swing.JLabel();
        btnSoundTest = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        inputMessageSound = new javax.swing.JTextField();
        defaultMessageSound = new javax.swing.JButton();
        noMessageSound = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        inputLoginSound = new javax.swing.JTextField();
        defaultLoginSound = new javax.swing.JButton();
        noLoginSound = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        inputLogoutSound = new javax.swing.JTextField();
        defaultLogoutSound = new javax.swing.JButton();
        noLogoutSound = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("XMP Client settings");

        jLabel1.setLabelFor(inputAddress);
        jLabel1.setText("Server address:");

        jLabel2.setLabelFor(inputPort);
        jLabel2.setText("Server port:");

        inputPort.setText("5222");

        jLabel3.setLabelFor(inputDomain);
        jLabel3.setText("Domain:");

        checkSSL.setText("Use SSL");

        jLabel4.setLabelFor(cmbPreset);
        jLabel4.setText("Preset:");

        cmbPreset.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Google" }));

        jLabel5.setLabelFor(inputResource);
        jLabel5.setText("XMPP Resource:");

        jLabel6.setLabelFor(inputPassword);
        jLabel6.setText("Password:");

        jLabel7.setLabelFor(inputLogin);
        jLabel7.setText("Login:");

        btnTestConnection.setText("Test Connection");
        btnTestConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestConnectionActionPerformed(evt);
            }
        });

        checkPLAIN.setSelected(true);
        checkPLAIN.setText("PLAIN Authentication");
        checkPLAIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPLAINActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout account_settings_panelLayout = new javax.swing.GroupLayout(account_settings_panel);
        account_settings_panel.setLayout(account_settings_panelLayout);
        account_settings_panelLayout.setHorizontalGroup(
            account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(account_settings_panelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputLogin)
                    .addComponent(inputResource)
                    .addComponent(inputDomain)
                    .addComponent(inputPort)
                    .addComponent(inputAddress)
                    .addComponent(cmbPreset, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTestConnection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputPassword)
                    .addGroup(account_settings_panelLayout.createSequentialGroup()
                        .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkSSL)
                            .addComponent(checkPLAIN))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator2)
        );
        account_settings_panelLayout.setVerticalGroup(
            account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(account_settings_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbPreset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputDomain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkSSL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkPLAIN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(account_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inputResource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTestConnection)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("XMPP Account", account_settings_panel);

        sliderVolume.setValue(100);

        jLabel8.setText("Sound volume");

        btnSoundTest.setText("Test Sound");
        btnSoundTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSoundTestMouseClicked(evt);
            }
        });

        jLabel9.setText("Message");

        inputMessageSound.setEditable(false);
        inputMessageSound.setText("Default");
        inputMessageSound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputMessageSoundMouseClicked(evt);
            }
        });

        defaultMessageSound.setText("Default");
        defaultMessageSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultMessageSoundActionPerformed(evt);
            }
        });

        noMessageSound.setText("None");
        noMessageSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noMessageSoundActionPerformed(evt);
            }
        });

        jLabel10.setText("Contact logged in");

        inputLoginSound.setEditable(false);
        inputLoginSound.setText("Default");
        inputLoginSound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputLoginSoundMouseClicked(evt);
            }
        });

        defaultLoginSound.setText("Default");
        defaultLoginSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultLoginSoundActionPerformed(evt);
            }
        });

        noLoginSound.setText("None");
        noLoginSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noLoginSoundActionPerformed(evt);
            }
        });

        jLabel11.setText("Contact logged out");

        inputLogoutSound.setEditable(false);
        inputLogoutSound.setText("Default");
        inputLogoutSound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputLogoutSoundMouseClicked(evt);
            }
        });

        defaultLogoutSound.setText("Default");
        defaultLogoutSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultLogoutSoundActionPerformed(evt);
            }
        });

        noLogoutSound.setText("None");
        noLogoutSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noLogoutSoundActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout application_settings_panelLayout = new javax.swing.GroupLayout(application_settings_panel);
        application_settings_panel.setLayout(application_settings_panelLayout);
        application_settings_panelLayout.setHorizontalGroup(
            application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(application_settings_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderVolume, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(application_settings_panelLayout.createSequentialGroup()
                        .addGroup(application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(inputMessageSound, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(defaultMessageSound)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noMessageSound))
                    .addComponent(btnSoundTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, application_settings_panelLayout.createSequentialGroup()
                        .addGroup(application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(inputLoginSound, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(defaultLoginSound)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noLoginSound))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, application_settings_panelLayout.createSequentialGroup()
                        .addGroup(application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(inputLogoutSound, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(defaultLogoutSound)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noLogoutSound)))
                .addContainerGap())
        );
        application_settings_panelLayout.setVerticalGroup(
            application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(application_settings_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputMessageSound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defaultMessageSound)
                    .addComponent(noMessageSound))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputLoginSound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defaultLoginSound)
                    .addComponent(noLoginSound))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(application_settings_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputLogoutSound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defaultLogoutSound)
                    .addComponent(noLogoutSound))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSoundTest)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Event Sounds", application_settings_panel);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnReset.setText("Revert to saved");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnSave))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        AppSettings settings = AppSettings.globalInstance();

        // user
        settings.setLogin(inputLogin.getText());
        // FIXME: security? Schmecurity!
        settings.setPassword(new String(inputPassword.getPassword()));
        settings.setResource(inputResource.getText());

        if(cmbPreset.getSelectedIndex() == 0)
            settings.setPreset(AppSettings.PresetType.None);
        else
            settings.setPreset(AppSettings.PresetType.Google);

        // server
        settings.setServerAddress(inputAddress.getText());
        settings.setServerDomain(inputDomain.getText());
        int port = 5222;
        try
        {
            port = Integer.parseInt(inputPort.getText());
        }
        catch (NumberFormatException e)
        {
            inputPort.setText("5222");
        }
        settings.setServerPort(port);
        settings.setUsePLAIN(checkPLAIN.isSelected());
        settings.setUseSSL(checkSSL.isSelected());

        // sound settings
        settings.setMessageSoundFile(inputMessageSound.getText());
        settings.setLoginSoundFile(inputLoginSound.getText());
        settings.setLogoutSoundFile(inputLogoutSound.getText());
        double rawVolume = sliderVolume.getValue();
        settings.setSoundVolume(rawVolume / 100);
        settings.saveToFile();
        settings.NotifyListeners();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void checkPLAINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPLAINActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkPLAINActionPerformed

    private void btnSoundTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSoundTestMouseClicked
        XMPPClient app = XMPPClient.globalInstance();
        double volume = sliderVolume.getValue();
        volume /= 100;
        app.soundUtils.playTestSound(volume);
    }//GEN-LAST:event_btnSoundTestMouseClicked

    private File browseForSoundFile()
    {
        //Create a file chooser
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                String extension = Utils.getExtension(f);
                if (extension != null) {
                    if (extension.equals("wav"))
                        return true;
                    else
                        return false;
                }

                return false;
            }
            @Override
            public String getDescription() {
                return "Wav files";
            }

        });
        //In response to a button click:
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            return fc.getSelectedFile();
        }
        else return null;
    }

    private void inputMessageSoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputMessageSoundMouseClicked
        if(evt.getButton() != MouseEvent.BUTTON1)
            return;
        File f = browseForSoundFile();
        if (f != null) {
            inputMessageSound.setText(f.getAbsolutePath());
        } else {
            System.out.println("Open command cancelled by user.");
        }
    }//GEN-LAST:event_inputMessageSoundMouseClicked

    private void defaultMessageSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultMessageSoundActionPerformed
        inputMessageSound.setText("Default");
    }//GEN-LAST:event_defaultMessageSoundActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        RevertSettingsToSaved();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnTestConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestConnectionActionPerformed
        testConnection();
    }//GEN-LAST:event_btnTestConnectionActionPerformed

    private void inputLoginSoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputLoginSoundMouseClicked
        if(evt.getButton() != MouseEvent.BUTTON1)
            return;
        File f = browseForSoundFile();
        if (f != null) {
            inputLoginSound.setText(f.getAbsolutePath());
        } else {
            System.out.println("Open command cancelled by user.");
        }
    }//GEN-LAST:event_inputLoginSoundMouseClicked

    private void inputLogoutSoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputLogoutSoundMouseClicked
        if(evt.getButton() != MouseEvent.BUTTON1)
            return;
        File f = browseForSoundFile();
        if (f != null) {
            inputLogoutSound.setText(f.getAbsolutePath());
        } else {
            System.out.println("Open command cancelled by user.");
        }
    }//GEN-LAST:event_inputLogoutSoundMouseClicked

    private void defaultLoginSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultLoginSoundActionPerformed
        inputLoginSound.setText("Default");
    }//GEN-LAST:event_defaultLoginSoundActionPerformed

    private void noMessageSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noMessageSoundActionPerformed
        inputMessageSound.setText("None");
    }//GEN-LAST:event_noMessageSoundActionPerformed

    private void noLoginSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noLoginSoundActionPerformed
        inputLoginSound.setText("None");
    }//GEN-LAST:event_noLoginSoundActionPerformed

    private void defaultLogoutSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultLogoutSoundActionPerformed
        inputLogoutSound.setText("Default");
    }//GEN-LAST:event_defaultLogoutSoundActionPerformed

    private void noLogoutSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noLogoutSoundActionPerformed
        inputLogoutSound.setText("None");
    }//GEN-LAST:event_noLogoutSoundActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel account_settings_panel;
    private javax.swing.JPanel application_settings_panel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSoundTest;
    private javax.swing.JButton btnTestConnection;
    private javax.swing.JCheckBox checkPLAIN;
    private javax.swing.JCheckBox checkSSL;
    private javax.swing.JComboBox cmbPreset;
    private javax.swing.JButton defaultLoginSound;
    private javax.swing.JButton defaultLogoutSound;
    private javax.swing.JButton defaultMessageSound;
    private javax.swing.JTextField inputAddress;
    private javax.swing.JTextField inputDomain;
    private javax.swing.JTextField inputLogin;
    private javax.swing.JTextField inputLoginSound;
    private javax.swing.JTextField inputLogoutSound;
    private javax.swing.JTextField inputMessageSound;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JTextField inputPort;
    private javax.swing.JTextField inputResource;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton noLoginSound;
    private javax.swing.JButton noLogoutSound;
    private javax.swing.JButton noMessageSound;
    private javax.swing.JSlider sliderVolume;
    // End of variables declaration//GEN-END:variables
}
